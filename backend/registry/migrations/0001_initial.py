# Generated by Django 5.1.2 on 2025-01-17 10:19

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dict', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ИД')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='изменен в')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('parameters', models.ManyToManyField(related_name='equipment_types', to='dict.equipmentparameters', verbose_name='Параметры оборудования')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудование',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ИД')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='изменен в')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('phone_number', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='Номер телефона')),
                ('experience', models.IntegerField(blank=True, default=None, null=True, verbose_name='Опыт работы (лет)')),
                ('license_categories', models.ManyToManyField(related_name='operators', to='dict.licensecategories', verbose_name='Категории водительских удостоверений')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operators', to='dict.org', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Оператор СПТ',
                'verbose_name_plural': 'Операторы СПТ',
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='Shifts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ИД')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='изменен в')),
                ('start_time', models.DateTimeField(verbose_name='Начало смены')),
                ('end_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Окончание смены')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shifts', to='registry.operator', verbose_name='Оператор')),
            ],
            options={
                'verbose_name': 'Журнал смен',
                'verbose_name_plural': 'Журналы смен',
                'ordering': ('start_time',),
            },
        ),
        migrations.CreateModel(
            name='ShiftEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ИД')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='изменен в')),
                ('start_time', models.DateTimeField(verbose_name='Начало состояния')),
                ('end_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Окончание состояния')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_event', to='dict.activityevents', verbose_name='Состояние')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift', to='registry.shifts', verbose_name='Смена')),
            ],
            options={
                'verbose_name': 'Детализация смен',
                'verbose_name_plural': 'Детализация смен',
                'ordering': ('start_time',),
            },
        ),
        migrations.CreateModel(
            name='Tech',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ИД')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='изменен в')),
                ('gos_num', models.CharField(max_length=9, unique=True, verbose_name='Гос. номер')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('equipment', models.ManyToManyField(related_name='techs', to='registry.equipment', verbose_name='Оборудование')),
                ('home_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dict.location', verbose_name='Базовая локация')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dict.techstatus', verbose_name='Состояние техники')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dict.techtype', verbose_name='Тип техники')),
            ],
            options={
                'verbose_name': 'Техника',
                'verbose_name_plural': 'Техника',
                'ordering': ['type'],
            },
        ),
        migrations.AddField(
            model_name='shifts',
            name='tech',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shifts', to='registry.tech', verbose_name='Техника'),
        ),
    ]
